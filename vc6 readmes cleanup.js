// Assists in cleaning up the boilerplate README.TXT files generated by VC6.
//
// Accepts one or more dirs as parameters and recursively scans them
// for non-empty "readme.txt" files containing the word "AppWizard".
// Each file's contents are displayed and the user can choose
// to have the contents erased.

// TODO: convert to Python and use regexps to automatically find boilerplate READMEs

var ForReading   = 1;
var ForWriting   = 2;
var ForAppending = 8;

var TristateUseDefault = -2;
var TristateTrue       = -1;
var TristateFalse      =  0;

var fso = new ActiveXObject("Scripting.FileSystemObject");


main();


function main() {
  var args = WScript.Arguments.Unnamed;
  if (args.length == 0) {
    WScript.Echo("ERR: No dirs specified.");
    return;
  }
  for (var n = 0; n < args.length; ++n) {
    try {
      processDir(fso.GetFolder(args(n)));
    }
    catch (x) {
      WScript.Echo('ERR: Cound not process dir "' + args(n) + '": ' + x.description);
    }
  }
}


function processDir(dir) {
  for (var e = new Enumerator(dir.Files); !e.atEnd(); e.moveNext())
    if (e.item().Name.toUpperCase() == "README.TXT")
      processFile(e.item());
  for (var e = new Enumerator(dir.SubFolders); !e.atEnd(); e.moveNext())
    processDir(e.item());
}


function processFile(file) {
  try {
    if (file.Size == 0) return;
    var s = file.OpenAsTextStream(ForReading, TristateUseDefault).ReadAll();
    if (s.indexOf("AppWizard") == -1) return;

    for (var n = 0; n < 100; ++n)
      WScript.Echo();
    WScript.Echo(s);
    WScript.Echo();
    WScript.Echo(file.Path);
    for (;;) {
      WScript.StdOut.Write("Delete file contents? [y/n/q] ");
      var c = WScript.StdIn.ReadLine();
      switch (c.toUpperCase()) {
        case "Y": clearFile(file); return;
        case "N": return;
        case "Q": WScript.Quit(0); return;
      }
    }
  }
  catch (x) {
    WScript.Echo('ERR: Cound not read file "' + file.Path + '": ' + x.description);
  }
}


function clearFile(file) {
  file.OpenAsTextStream(ForWriting);
}
