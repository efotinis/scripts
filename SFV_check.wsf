<job>
<script language="jscript">


// globals
var stdOut = WScript.StdOut;
var stdErr = WScript.StdErr;
var fso = new ActiveXObject("Scripting.FileSystemObject");
var wshShell = new ActiveXObject("WScript.Shell");

// consts
var ForReading = 1;
var WshRunning = 0;

var ok = main();
WScript.Quit(ok ? 0 : 1);
var f = TristateTrue;


function main() {
  /*
  var a = Array("   one", "two   ", "  three   ", "  four  four   ");
  for (var i = 0; i < a.length; ++i) {
    var s = a[i].replace(/^ +| +$/, "");
    stdOut.WriteLine('"' + s + '"');
  }
  return;
  */
  

  var args = WScript.Arguments;
  if (args.length != 1) {
    stdErr.WriteLine("ERR: SFV file name required.");
    return false;
  }
  
  var sfvFile = tryOpenTextFile(fso, args(0), ForReading);
  if (!sfvFile) {
    stdErr.WriteLine("ERR: Could not open the specified file: " + args(0) + ".");
    return false;
  }
  
  var dirPath = fso.GetParentFolderName(args(0));
  return processFile(sfvFile, dirPath);
}


function tryOpenTextFile(fso, name, mode, create, format) {
  try {
    return fso.OpenTextFile(name, mode, create, format);
  }
  catch (err) {
    return null;
  }
}


function processFile(file, dirPath) {
  while (!file.AtEndOfStream) {
    var s = file.ReadLine();
    if (isDataLine(s) && !processRecord(s, dirPath))
      return false;
  }
  return true;
}


function isDataLine(s) {
  s = s.replace(/^ +/, "");
  return s.length > 0 && s.charAt(0) != ";";
}


function processRecord(rec, dirPath) {
  var a = rec.split(" ");
  if (a.length != 2) {
    stdErr.WriteLine("ERR: Invalid record: " + rec);
    return false;
  }
  
  var file = a[0];
  var filePath = fso.BuildPath(dirPath, file);
  var crc = hexStrToInt(a[1]);
  
  //stdOut.WriteLine("File: " + );
  //stdOut.WriteLine("CRC: " + a[1]);
  //stdOut.WriteLine();
  //var s = 122434234*234234234234;
  
  var cmdLine = "CrcVerify.exe \"" + filePath + "\" " + crc;  
  var exec = wshShell.Exec(cmdLine);
  
  while (exec.Status == WshRunning) {
    WScript.Sleep(100);
  }
  
  var ok = exec.ExitCode == 0;
  if (ok)
    stdOut.WriteLine("OK\t" + file);
  else
    stdOut.WriteLine("FAIL\t" + file);
  
  return ok;
}


function hexStrToInt(s) {
  var n = parseInt(s, 16);
  return isNaN(n) ? 0 : n;
}


</script>
</job>